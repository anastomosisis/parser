if window?
  parser = require('./parser')
  subparser = require('./parser')
else
  parser = require '../lib/parser'
  subparser = require('../lib/parser')

ErrorReporter = require 'error-reporter'

parser.boob = true

# A wrapper module for the parser generated by PEG.
#
# @note Provides a way to handle errors consistently regardless of if the error
# originated from PEG or was thrown manually as part the parsing expression for
# a rule.
#
module.exports =

  # Parse CCSS to produce an AST.
  #
  # @param source [String] A CCSS expression.
  # @return [Array] The AST which represents `source`.
  #
  parse: (source) ->
    results = null
    
    try
      results = parser.parse source
    catch error
      errorReporter = new ErrorReporter source
      {message, line:lineNumber, column:columnNumber} = error
      errorReporter.reportError message, lineNumber, columnNumber

    return results
  
  subparse: (source) ->
    results = null

    try
      results = subparser.parse source
    catch error
      errorReporter = new ErrorReporter source
      {message, line:lineNumber, column:columnNumber} = error
      errorReporter.reportError message, lineNumber, columnNumber

    return results
